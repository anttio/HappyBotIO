{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 7c9109558b5e9393d5b8","webpack:///./src/app.js","webpack:///./src/components/HappyBot.js","webpack:///external \"botkit\"","webpack:///./src/components/Kilometrikisa.js","webpack:///external \"cheerio\"","webpack:///external \"request\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_HappyBot","_HappyBot2","_Kilometrikisa","_Kilometrikisa2","kmkisa","username","process","env","KMKISA_USERNAME","password","KMKISA_PASSWORD","loginURL","KMKISA_LOGIN_URL","teamURL","KMKISA_TEAM_URL","hears","bot","message","getTeamStatistics","statistics","reply","text","team","ranking","mileage","attachments","getMemberStatisticsForSlackBot","members","Botkit","SLACK_API_TOKEN","console","log","exit","controller","slackbot","debug","spawn","token","startRTM","err","Error","require","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","cheerio","request","defaults","jar","Kilometrikisa","this","_username","_password","_loginURL","_teamURL","callback","error","response","body","statusCode","$","load","attribs","url","method","form","csrfmiddlewaretoken","headers","referer","teamData","find","eq","trim","replace","days","membersData","each","member","cell","push","_this","_getCSRFMiddlewareToken","_logIn","_fetchTeamStatistics","kilometers","parseFloat","parseInt","toFixed","color","author_name"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _HappyBot = __webpack_require__(2);\n\t\n\tvar _HappyBot2 = _interopRequireDefault(_HappyBot);\n\t\n\tvar _Kilometrikisa = __webpack_require__(4);\n\t\n\tvar _Kilometrikisa2 = _interopRequireDefault(_Kilometrikisa);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar kmkisa = new _Kilometrikisa2.default({\n\t    username: process.env.KMKISA_USERNAME,\n\t    password: process.env.KMKISA_PASSWORD,\n\t    loginURL: process.env.KMKISA_LOGIN_URL,\n\t    teamURL: process.env.KMKISA_TEAM_URL\n\t});\n\t\n\t_HappyBot2.default.hears(['kmkisa'], ['direct_message', 'direct_mention'], function (bot, message) {\n\t    kmkisa.getTeamStatistics(function (statistics) {\n\t        bot.reply(message, {\n\t            text: 'Your team is currently ranked at ' + statistics.team.ranking + ' and it has cycled ' + statistics.team.mileage + ' kilometers.',\n\t            attachments: kmkisa.getMemberStatisticsForSlackBot(statistics.members)\n\t        });\n\t    });\n\t});\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Botkit = __webpack_require__(3);\n\t\n\tif (!process.env.SLACK_API_TOKEN) {\n\t    console.log('Error: Specify Slack access token in environment.');\n\t    process.exit(1);\n\t}\n\t\n\tvar controller = Botkit.slackbot({ debug: false });\n\t\n\tcontroller.spawn({\n\t    token: process.env.SLACK_API_TOKEN\n\t}).startRTM(function (err) {\n\t    if (err) {\n\t        throw new Error(err);\n\t    }\n\t});\n\t\n\tmodule.exports = controller;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"botkit\");\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar cheerio = __webpack_require__(5);\n\tvar request = __webpack_require__(6).defaults({\n\t  jar: true\n\t});\n\t\n\tvar Kilometrikisa = function () {\n\t  function Kilometrikisa(props) {\n\t    _classCallCheck(this, Kilometrikisa);\n\t\n\t    this._username = props.username;\n\t    this._password = props.password;\n\t    this._loginURL = props.loginURL;\n\t    this._teamURL = props.teamURL;\n\t  }\n\t\n\t  /**\n\t   * Get CSRF Middleware Token from the login page\n\t   * @param  {Function} callback\n\t   */\n\t\n\t\n\t  _createClass(Kilometrikisa, [{\n\t    key: '_getCSRFMiddlewareToken',\n\t    value: function _getCSRFMiddlewareToken(callback) {\n\t      if (!this._loginURL) {\n\t        return false;\n\t      }\n\t\n\t      request(this._loginURL, function (error, response, body) {\n\t        if (!error && response.statusCode === 200) {\n\t          var $ = cheerio.load(body);\n\t          var token = $('[name=\"csrfmiddlewaretoken\"]')[0].attribs.value;\n\t          callback(token);\n\t        }\n\t      });\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Log in for the Kilometrikisa web service\n\t     * @param  {String}   csrfmiddlewaretoken\n\t     * @param  {Function} callback\n\t     */\n\t\n\t  }, {\n\t    key: '_logIn',\n\t    value: function _logIn(token, callback) {\n\t      if (!this._loginURL || !this._username || !this._password || !token) {\n\t        return false;\n\t      }\n\t\n\t      request({\n\t        url: this._loginURL,\n\t        method: 'POST',\n\t        form: {\n\t          username: this._username,\n\t          password: this._password,\n\t          csrfmiddlewaretoken: token\n\t        },\n\t        headers: {\n\t          referer: this._loginURL\n\t        }\n\t      }, function (error) {\n\t        if (!error) {\n\t          callback();\n\t        }\n\t      });\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Fetch team statistics from the Kilometrikisa team page\n\t     * @param  {Function} callback\n\t     */\n\t\n\t  }, {\n\t    key: '_fetchTeamStatistics',\n\t    value: function _fetchTeamStatistics(callback) {\n\t      if (!this._teamURL) {\n\t        return false;\n\t      }\n\t\n\t      var statistics = {};\n\t\n\t      request(this._teamURL, function (error, response, body) {\n\t        if (!error && response.statusCode === 200) {\n\t          var $ = cheerio.load(body);\n\t\n\t          var teamData = $('.team-contest-table').find('li');\n\t          statistics.team = {\n\t            ranking: teamData.eq(1).find('strong').text().trim(),\n\t            mileage: teamData.eq(3).text().trim().replace(/^\\D+/g, '').replace(' km', ''),\n\t            days: teamData.eq(5).text().trim().replace(/^\\D+/g, '')\n\t          };\n\t\n\t          var membersData = $('[data-slug=\"my-team\"]').find('tbody tr');\n\t          statistics.members = [];\n\t          membersData.each(function (i, member) {\n\t            var cell = $(member).find('td');\n\t            statistics.members.push([cell.eq(1).text().trim(), // name\n\t            cell.eq(2).text().trim(), // kilometers\n\t            cell.eq(3).text().trim() // days\n\t            ]);\n\t          });\n\t\n\t          callback(statistics);\n\t        }\n\t      });\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Get team statistics\n\t     * @param  {Function} callback\n\t     * @return {Array}\n\t     */\n\t\n\t  }, {\n\t    key: 'getTeamStatistics',\n\t    value: function getTeamStatistics(callback) {\n\t      var _this = this;\n\t\n\t      this._getCSRFMiddlewareToken(function (token) {\n\t        return _this._logIn(token, function () {\n\t          return _this._fetchTeamStatistics(function (statistics) {\n\t            return callback(statistics);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Get formatted statistics for SlackBot attachment\n\t     * @param  {Array} members\n\t     * @return {Array}\n\t     */\n\t\n\t  }, {\n\t    key: 'getMemberStatisticsForSlackBot',\n\t    value: function getMemberStatisticsForSlackBot(members) {\n\t      var attachments = [];\n\t\n\t      for (var i = 0; i < members.length; i++) {\n\t        var kilometers = parseFloat(members[i][1].replace(/\\s/g, ''));\n\t        console.log(kilometers);\n\t        var days = parseInt(members[i][2]);\n\t        var text = members[i][1].replace(',', '.') + ' km | ' + days + ' days';\n\t\n\t        if (kilometers > 0 && days > 0) {\n\t          text += ' | ' + (kilometers / days).toFixed(2) + ' km daily avg.';\n\t        }\n\t\n\t        attachments.push({\n\t          color: i === 0 ? '#cfb53b' : i === 1 ? '#e6e8fa' : i === 2 ? '#8c7853' : '#f8f8f8',\n\t          author_name: members[i][0],\n\t          text: text\n\t        });\n\t      }\n\t\n\t      return attachments;\n\t    }\n\t  }]);\n\t\n\t  return Kilometrikisa;\n\t}();\n\t\n\texports.default = Kilometrikisa;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"cheerio\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"request\");\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7c9109558b5e9393d5b8\n **/","import HappyBot from './components/HappyBot';\nimport Kilometrikisa from './components/Kilometrikisa';\n\nconst kmkisa = new Kilometrikisa({\n    username: process.env.KMKISA_USERNAME,\n    password: process.env.KMKISA_PASSWORD,\n    loginURL: process.env.KMKISA_LOGIN_URL,\n    teamURL: process.env.KMKISA_TEAM_URL\n});\n\nHappyBot.hears(['kmkisa'], ['direct_message', 'direct_mention'], (bot, message) => {\n    kmkisa.getTeamStatistics((statistics) => {\n        bot.reply(message, {\n            text: 'Your team is currently ranked at ' + statistics.team.ranking + ' and it has cycled ' + statistics.team.mileage + ' kilometers.',\n            attachments: kmkisa.getMemberStatisticsForSlackBot(statistics.members)\n        });\n    });\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app.js\n **/","const Botkit = require('botkit');\n\nif (!process.env.SLACK_API_TOKEN) {\n    console.log('Error: Specify Slack access token in environment.');\n    process.exit(1);\n}\n\nconst controller = Botkit.slackbot({debug: false});\n\ncontroller.spawn({\n    token: process.env.SLACK_API_TOKEN\n}).startRTM(function(err) {\n    if (err) {\n        throw new Error(err);\n    }\n});\n\nmodule.exports = controller;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/HappyBot.js\n **/","module.exports = require(\"botkit\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"botkit\"\n ** module id = 3\n ** module chunks = 0\n **/","const cheerio = require('cheerio');\nconst request = require('request').defaults({\n  jar: true\n});\n\nexport default class Kilometrikisa {\n\n    constructor(props) {\n      this._username = props.username;\n      this._password = props.password;\n      this._loginURL = props.loginURL;\n      this._teamURL = props.teamURL;\n    }\n\n    /**\n     * Get CSRF Middleware Token from the login page\n     * @param  {Function} callback\n     */\n    _getCSRFMiddlewareToken(callback) {\n      if (!this._loginURL) { return false; }\n\n      request(this._loginURL, (error, response, body) => {\n        if (!error && response.statusCode === 200) {\n          const $ = cheerio.load(body);\n          const token = $('[name=\"csrfmiddlewaretoken\"]')[0].attribs.value;\n          callback(token);\n        }\n      });\n\n      return true;\n    }\n\n    /**\n     * Log in for the Kilometrikisa web service\n     * @param  {String}   csrfmiddlewaretoken\n     * @param  {Function} callback\n     */\n    _logIn(token, callback) {\n      if (!this._loginURL || !this._username || !this._password || !token) {\n        return false;\n      }\n\n      request({\n        url: this._loginURL,\n        method: 'POST',\n        form: {\n          username: this._username,\n          password: this._password,\n          csrfmiddlewaretoken: token\n        },\n        headers: {\n          referer: this._loginURL\n        }\n      }, (error) => {\n        if (!error) { callback(); }\n      });\n\n      return true;\n    }\n\n    /**\n     * Fetch team statistics from the Kilometrikisa team page\n     * @param  {Function} callback\n     */\n    _fetchTeamStatistics(callback) {\n      if (!this._teamURL) { return false; }\n\n      let statistics = {};\n\n      request(this._teamURL, (error, response, body) => {\n        if (!error && response.statusCode === 200) {\n          const $ = cheerio.load(body);\n\n          const teamData = $('.team-contest-table').find('li');\n          statistics.team = {\n            ranking: teamData.eq(1).find('strong').text().trim(),\n            mileage: teamData.eq(3).text().trim().replace(/^\\D+/g, '').replace(' km', ''),\n            days: teamData.eq(5).text().trim().replace(/^\\D+/g, '')\n          };\n\n          const membersData = $('[data-slug=\"my-team\"]').find('tbody tr');\n          statistics.members = [];\n          membersData.each((i, member) => {\n            const cell = $(member).find('td');\n            statistics.members.push([\n              cell.eq(1).text().trim(),   // name\n              cell.eq(2).text().trim(),   // kilometers\n              cell.eq(3).text().trim()    // days\n            ]);\n          });\n\n          callback(statistics);\n        }\n      });\n\n      return true;\n    }\n\n    /**\n     * Get team statistics\n     * @param  {Function} callback\n     * @return {Array}\n     */\n    getTeamStatistics(callback) {\n      this._getCSRFMiddlewareToken((token) =>\n          this._logIn(token, () =>\n              this._fetchTeamStatistics((statistics) =>\n                  callback(statistics)\n              )\n          )\n      );\n    }\n\n    /**\n     * Get formatted statistics for SlackBot attachment\n     * @param  {Array} members\n     * @return {Array}\n     */\n    getMemberStatisticsForSlackBot(members) {\n      let attachments = [];\n\n      for (let i = 0; i < members.length; i++) {\n        var kilometers = parseFloat(members[i][1].replace(/\\s/g, ''));\n        console.log(kilometers);\n        var days = parseInt(members[i][2]);\n        var text = members[i][1].replace(',', '.') + ' km | ' + days + ' days';\n\n        if (kilometers > 0 && days > 0) {\n          text += ' | ' + (kilometers / days).toFixed(2) + ' km daily avg.';\n        }\n\n        attachments.push({\n          color: i === 0 ? '#cfb53b' : i === 1 ? '#e6e8fa' : i === 2 ? '#8c7853' : '#f8f8f8',\n          author_name: members[i][0],\n          text: text\n        });\n      }\n\n      return attachments;\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Kilometrikisa.js\n **/","module.exports = require(\"cheerio\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cheerio\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = require(\"request\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"request\"\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}